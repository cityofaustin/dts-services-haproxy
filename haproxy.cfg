global
    maxconn 4096

    # intermediate configuration
    ssl-default-bind-curves X25519:prime256v1:secp384r1
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers ssl-min-ver TLSv1.2 no-tls-tickets

    ssl-default-server-curves X25519:prime256v1:secp384r1
    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets
    log stdout local0 info

defaults
    log     global
    option  dontlognull
    timeout connect 5000ms
    timeout client  50000ms
    timeout server  50000ms

frontend http_front
    bind *:80
    mode http
    log global

    # Define ACLs
    acl path_knack_services path_beg /knack-services
    acl path_legacy_scripts path_beg /legacy-scripts
    acl path_ctr_data_lake path_beg /ctr-data-lake
    acl path_parking path_beg /parking
    acl path_road_conditions path_beg /road-conditions
    acl path_bond_reporting path_beg /bond-reporting

    # Use the postgrest backend if any ACL matches
    use_backend postgrest if path_knack_services or path_legacy_scripts or path_ctr_data_lake or path_parking or path_road_conditions or path_bond_reporting

    # # Redirect to HTTPS if no ACLs match
    # redirect scheme https code 301 if !{ ssl_fc }
    use_backend server_not_found

frontend https_front
    bind *:443 ssl crt /usr/local/etc/haproxy/ssl alpn h2,http/1.1
    use_backend server_not_found

backend postgrest
    mode http
    server postgrest_server localhost:8080 check

backend server_not_found
    mode http
    # return 403
    http-request deny
